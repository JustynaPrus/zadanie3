{"version":3,"sources":["components/Button.js","components/Text.js","components/App.js","index.js"],"names":["Button","props","onClick","click","Text","texts","map","text","index","quote","author","API","App","state","handleDataFetch","fetch","then","response","ok","Error","json","data","setState","prevState","concat","res","this","randomText","Math","floor","random","length","console","log","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAMeA,EAJA,SAACC,GACd,OAAO,wBAAQC,QAASD,EAAME,MAAvB,+BCyBMC,EA1BF,SAACH,GACZ,IAAMI,EAAQJ,EAAMI,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAC5B,gCACE,4BAAID,EAAKE,QACT,4BAAIF,EAAKG,WAFDF,MAMZ,OAAO,8BAAMH,KCLTM,EAAG,wIAEHC,E,4MACJC,MAAQ,CACNR,MAAO,I,EASTS,gBAAkB,WAChBC,MAAMJ,GACHK,MAAK,SAACC,GACL,GAAIA,EAASC,GACX,OAAOD,EAET,MAAME,MAAM,oBAEbH,MAAK,SAACC,GAAD,OAAcA,EAASG,UAC5BJ,MAAK,SAACK,GACL,IAAMd,EAAOc,EACb,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BlB,MAAOkB,EAAUlB,MAAMmB,OAAOjB,W,uDAlBtC,WAAqB,IAAD,OAClBQ,MAAMJ,GACHK,MAAK,SAACS,GAAD,OAASA,EAAIL,UAClBJ,MAAK,SAACK,GAAD,OAAU,EAAKC,SAAS,CAAEjB,MAAOgB,S,oBAoB3C,WACE,IAAMhB,EAAQqB,KAAKb,MAAMR,MAEnBsB,EAAatB,EAAMuB,KAAKC,MAAMD,KAAKE,SAAWzB,EAAM0B,SAE1D,OADAC,QAAQC,IAAIN,GAEV,gCACE,cAAC,EAAD,CAAQxB,MAAOuB,KAAKZ,kBACnBT,EAAQ,cAAC,EAAD,CAAMA,MAAOA,IAAYA,S,GApCxB6B,aA0CHtB,IC5CfuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.40813da5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = (props) => {\r\n  return <button onClick={props.click}>Poka≈º cytat</button>;\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst Text = (props) => {\r\n  const texts = props.texts.map((text, index) => (\r\n    <div key={index}>\r\n      <p>{text.quote}</p>\r\n      <p>{text.author}</p>\r\n    </div>\r\n  ));\r\n\r\n  return <div>{texts}</div>;\r\n};\r\n\r\nconst Quote = (props) => {\r\n  const randomText =\r\n    props.texts[Math.floor(Math.random() * props.texts.length)];\r\n  console.log(randomText);\r\n\r\n  const quote = (\r\n    <div>\r\n      <p>{props.texts[3].quote}</p>\r\n      <p>{props.texts[3].author}</p>\r\n    </div>\r\n  );\r\n\r\n  return <div>{quote}</div>;\r\n};\r\n\r\nexport default Text;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nconst API = `https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json`;\n\nclass App extends Component {\n  state = {\n    texts: [],\n  };\n\n  componentDidMount() {\n    fetch(API)\n      .then((res) => res.json())\n      .then((data) => this.setState({ texts: data }));\n  }\n\n  handleDataFetch = () => {\n    fetch(API)\n      .then((response) => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(\"Niepowodzenie\");\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        const text = data;\n        this.setState((prevState) => ({\n          texts: prevState.texts.concat(text),\n        }));\n      });\n  };\n\n  render() {\n    const texts = this.state.texts;\n\n    const randomText = texts[Math.floor(Math.random() * texts.length)];\n    console.log(randomText);\n    return (\n      <div>\n        <Button click={this.handleDataFetch} />\n        {texts ? <Text texts={texts} /> : texts}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}